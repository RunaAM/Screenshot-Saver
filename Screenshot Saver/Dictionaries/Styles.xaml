<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:control="clr-namespace:Screenshot_Saver">


    <!--  Round Button Style  -->
    <Style x:Key="RoundButtonStyle" TargetType="Button">
        <Style.Resources />
        <Setter Property="Background" Value="{DynamicResource Accent}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource Button.Border}" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonTextBrush}" />
        <Setter Property="Width" Value="150" />
        <Setter Property="Height" Value="40" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Accent.Over}" />

                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Accent.Click}" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Window Title  -->
    <Style x:Key="Title" TargetType="Label">
        <Setter Property="Content" Value="Screenshot Saver" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Margin" Value="1,0,0,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonTextBrush}" />


    </Style>

    <!--  Filename Textbox  -->
    <Style x:Key="FileName" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource Borders}" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonTextBrush}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border
                        Margin="{TemplateBinding Margin}"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Settings Button  -->
    <Style x:Key="SettingsButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource Accent}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Button.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Accent.Over}" />

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleSwitchStyle1" TargetType="{x:Type control:ToggleSwitch}">
        <Setter Property="MaxHeight" Value="30" />
        <Setter Property="MaxWidth" Value="60" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="60" />
        <Setter Property="BorderBrush" Value="{DynamicResource Borders}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="0,0,30,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type control:ToggleSwitch}">
                    <Border
                        x:Name="bk"
                        Background="{DynamicResource Accent.Click}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="15">
                        <Ellipse
                            x:Name="ep"
                            Width="24"
                            Margin="2"
                            HorizontalAlignment="Left"
                            Fill="{DynamicResource Borders}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ep" Property="HorizontalAlignment" Value="Right" />

                            <Setter TargetName="bk" Property="Background" Value="{DynamicResource Borders}" />
                            <Setter TargetName="ep" Property="Width" Value="24" />
                            <Setter TargetName="ep" Property="Fill" Value="{DynamicResource Accent.Over}" />

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Accent.Over}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{DynamicResource Storyboard.Toggleswtich.Click.Start}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{DynamicResource Storyboard.Toggleswtich.Click.Stop}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SettingItemFrame" TargetType="Rectangle">
        <Setter Property="Fill" Value="{DynamicResource SettingsItemFrame}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="RadiusX" Value="5" />
        <Setter Property="RadiusY" Value="5" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Width" Value="750" />
        <Setter Property="StrokeThickness" Value="1"/>
        <Setter Property="Stroke" Value="{DynamicResource Button.Border}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" Value="{DynamicResource Accent.Over}" />

            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SettingsTextStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="50,0,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonTextBrush}" />
        <Setter Property="FontSize" Value="16" />
    </Style>

</ResourceDictionary>